\NeedsTeXFormat{LaTeX2e}
\ProvidesExplPackage {filetree} {2025-10-16} {1.0} {Automatic generation of forest file trees with bash (tree + sed).}

% Source : https://tex.stackexchange.com/a/515774/383565

% Packages
\RequirePackage[edges]{forest}

% Colours
\definecolor{g__filetree_folderbg_colors}{RGB}{124,166,198}
\definecolor{g__filetree_folderborder_colors}{RGB}{110,144,169}

% Variables
  % Strings
  \str_new:N \g__filetree_i_str
  \str_new:N \g__filetree_I_only_str
  \str_new:N \g__filetree_file_path_str
  \str_new:N \g__filetree_final_i_str
  \str_new:N \g__filetree_final_I_str
  \str_new:N \g__filetree_Output_To_str
  \str_new:N \g__filetree_final_Output_To_str
  \str_new:N \l__FileTree_full_path_str
  \str_new:N \g__filetree_sys_shell_now_str
  \str_new:N \g__FileTree_pathkey_str

  % Integers
  \int_new:N \g__filetree_current_tree_number_int

  % Dimensions
  \dim_new:N \g__filetree_pic_size_dim
  \dim_set:Nn \g__filetree_pic_size_dim {4pt}

  % Booleans
  \bool_new:N \g__filetree_I_bool

  % Messages
  \msg_new:nnn {filetree} {shell_escape_is_disabled} {(\msg_line_context:)~Unrestricted~shell~escape~is~disabled.~Using~cached~files,~if~they~exist.}
  \msg_new:nnn {filetree} {missing_file_tree_.tex} {The~file~#1~is~not~found~\msg_line_context:;~compile~with~unrestricted~shell~escape~to~generate~it.}

% Keys
\tikzset{
  ,folder/.pic={
    \filldraw [
        ,draw           = g__filetree_folderborder_colors
        ,top~color      = g__filetree_folderbg_colors!50
        ,bottom~color   = g__filetree_folderbg_colors
    ] 
    (-1.05*\g__filetree_pic_size_dim,0.2\g__filetree_pic_size_dim+5pt) rectangle ++(.75*\g__filetree_pic_size_dim,-0.2\g__filetree_pic_size_dim-5pt);

    \filldraw [
        ,draw           = g__filetree_folderborder_colors
        ,top~color      = g__filetree_folderbg_colors!50
        ,bottom~color   = g__filetree_folderbg_colors
    ] 
    (-1.15*\g__filetree_pic_size_dim,-\g__filetree_pic_size_dim) rectangle (1.15*\g__filetree_pic_size_dim,\g__filetree_pic_size_dim);
  }
  ,file/.pic={
    \filldraw [
        ,draw           = g__filetree_folderborder_colors
        ,top~color      = g__filetree_folderbg_colors!5
        ,bottom~color   = g__filetree_folderbg_colors!10
    ] 
    (-\g__filetree_pic_size_dim,.4*\g__filetree_pic_size_dim+5pt) coordinate (a) |- (\g__filetree_pic_size_dim,-1.2*\g__filetree_pic_size_dim) coordinate (b) -- ++(0,1.6*\g__filetree_pic_size_dim) coordinate (c) -- ++(-4pt,5pt) coordinate (d) -- cycle (d) |- (c) ;
  }
}
\forestset{
  ,declare~autowrapped~toks = {filetree_pic_me_toks}{}
  ,declare~boolean~register = {filetree_pic_root_bool}
  ,filetree_pic_root_bool                 = 0
  ,filetree_pic_dir_tree/.style={
    ,for~tree={
      ,folder
      ,font     = \ttfamily
      ,grow'    = 0
    }
    ,before~typesetting~nodes = {
      ,for~tree     = {
        ,edge~label+/.option  = {filetree_pic_me_toks},
      }
      ,if~filetree_pic_root_bool  = {
        ,tikz+  = {
          \pic at ([xshift=\g__filetree_pic_size_dim].west) {folder};
        }
        ,align  = {l}
      }{}
    },
  }
  ,filetree_pic_me_set/.code~n~args = { 2 } {
    \forestset{
      #1/.style     = {
        inner~xsep  = 2\g__filetree_pic_size_dim,
        filetree_pic_me_toks      = {pic {#2}},
      }
    }
  }
  ,file~tree/.style = {
    ,filetree_pic_me_set     = {directory}{folder}
    ,filetree_pic_me_set     = {file}{file}
    ,filetree_pic_dir_tree
    ,filetree_pic_root_bool
    ,for~tree={% folder icons by default; override using file for file icons
      ,directory
      ,fit = band
      ,l~sep = 2\g__filetree_pic_size_dim+2mm
    }
  }
}

\keys_define:nn {filetree} {
,i              .str_set:N = \g__filetree_i_str
    ,ignore         .meta:n   = { i = #1 }


,i+             .code:n   = { \str_put_right:Nn { \g__filetree_i_str } }
    ,ignore-add     .meta:n   = { i+ = #1 }
    ,ignore-also    .meta:n   = { i+ = #1 }


,i-extensions   .code:n   = { 
    \clist_map_inline:nn { #1 } {
    % Make sure each item (file extension) of the user's clist is prepended with a dot (if it isn't already there). Save this new clist under \l_tmpa_clist. 
    \str_if_eq:nnTF 
        { \str_item:nn {##1} {1} } 
        { . }
        { \clist_put_right:Nn \l_tmpa_clist { ##1 } }
        { \clist_put_right:Nn \l_tmpa_clist { .##1 } }
    }
    \str_put_right:Ne \g__filetree_i_str { \clist_use:Nn \l_tmpa_clist { | } }
}


,i-match-name   .code:n   = {
    \str_put_right:Ne \g__filetree_i_str { \clist_use:nn { #1 } { | } }
}
    ,i-folders      .meta:n   = { i-match-name = #1 }
    ,i-files        .meta:n   = { i-match-name = #1 }


,i-clear        .code:n   = { \str_clear:N \g__filetree_i_str }

,I              .code:n   = {
    \bool_set_true:N \g__filetree_I_bool
    \str_set:Nn \g__filetree_I_only_str {#1}
}
    ,Ignore         .meta:n   = { I = #1 }
    ,Ignore-only    .meta:n   = { I = #1 }
    ,I-only         .meta:n   = { I = #1 }
,I-clear        .code:n   = { \str_clear:N \g__filetree_I_only_str }


,O              .str_set:N   = \g__filetree_Output_To_str
    ,output-to      .meta:n   = { O = #1 }
    ,output-To      .meta:n   = { O = #1 }
    ,Output-to      .meta:n   = { O = #1 }
    ,Output-To      .meta:n   = { O = #1 }

,pathkey        .str_set:N   = \g__FileTree_pathkey_str
}

\NewDocumentCommand{\filetree}{ O{} m }{
    % Step the counter for the file tree number
    \int_incr:N \g__filetree_current_tree_number_int
    % Default output location
    \str_set:Ne \g__filetree_Output_To_str {FileTrees/tree_\int_use:N \g__filetree_current_tree_number_int.tex}
    \group_begin:
        \keys_set:nn { filetree } { #1 }
        % Final flag processing before parsing to file_tree.sh
            % -i
            \str_if_empty:NF \g__filetree_i_str {
                \str_set:Nn \g__filetree_final_i_str { -i~"\g__filetree_i_str" }
            }
            % -I
            \bool_if:NT \g__filetree_I_bool {
                \str_set:Nn \g__filetree_final_I_str { -I~"\g__filetree_I_only_str"}
            }
            % -O
            \str_if_empty:NF \g__filetree_Output_To_str {
                \str_set:Ne \g__filetree_final_Output_To_str { -O~"\g__filetree_Output_To_str" }
            }
        
    % File path parsed to file_tree.sh
        \str_set:Ne \l_tmpa_str {#2}
        \str_set:Ne \g__filetree_file_path_str {
        \str_if_empty:NTF \l_tmpa_str
            { ./ }
            { #2 }
        }

        \str_set:Ne \g__filetree_sys_shell_now_str {
        % Execute the bash script file_tree.sh
            bash~file_tree.sh
        \c_space_tl
        % -i flag
            \g__filetree_final_i_str
        \c_space_tl
        % -I flag (activated only if the string is nonempty)
            \g__filetree_final_I_str
        \c_space_tl
        % -O flag
            \g__filetree_final_Output_To_str
        \c_space_tl
        % File path parsed to file_tree.sh (the argument of file_tree.sh)
            \g__filetree_file_path_str
        }

        \sys_shell_now:e {\g__filetree_sys_shell_now_str}

        \file_input:V \g__filetree_Output_To_str
    \group_end:
}

\file_input_stop: